#!/bin/bash

# System Security Check Script (syscheck.sh)
# –í—ã–ø–æ–ª–Ω—è–µ—Ç –±—ã—Å—Ç—Ä—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã
# –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ~15-20 —Å–µ–∫—É–Ω–¥

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color
BOLD='\033[1m'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å–µ–∫—Ü–∏–π
print_section() {
    echo -e "\n${BOLD}${BLUE}=== $1 ===${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
print_status() {
    local status=$1
    local message=$2
    
    case $status in
        "OK")
            echo -e "  ${GREEN}‚úì $message${NC}"
            ;;
        "WARN")
            echo -e "  ${YELLOW}‚ö† $message${NC}"
            ;;
        "CRIT")
            echo -e "  ${RED}‚úó $message${NC}"
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ—Ä—Ç–æ–≤
check_suspicious_ports() {
    local suspicious_ports="1337 9001 4444 31337 8080 8888"
    local found_suspicious=""
    
    for port in $suspicious_ports; do
        if ss -tuln | grep -q ":$port "; then
            found_suspicious="$found_suspicious $port"
        fi
    done
    
    if [ -n "$found_suspicious" ]; then
        print_status "CRIT" "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã: $found_suspicious"
        return 1
    else
        print_status "OK" "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–∞
check_disk_usage() {
    local critical_usage=$(df -h | grep -E '(8[0-9]%|9[0-9]%|100%)')
    
    if [ -n "$critical_usage" ]; then
        print_status "CRIT" "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
        echo "$critical_usage" | while read line; do
            echo -e "    ${RED}$line${NC}"
        done
        return 1
    else
        print_status "OK" "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞ –≤ –Ω–æ—Ä–º–µ"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤
check_recent_changes() {
    local recent_changes=$(find /etc -type f -mtime -2 2>/dev/null | head -10)
    
    if [ -n "$recent_changes" ]; then
        print_status "WARN" "–ù–µ–¥–∞–≤–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ /etc (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è):"
        echo "$recent_changes" | while read file; do
            local mtime=$(stat -c %y "$file" 2>/dev/null | cut -d' ' -f1)
            echo -e "    ${YELLOW}$mtime: $file${NC}"
        done
        return 1
    else
        print_status "OK" "–ù–µ–¥–∞–≤–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ /etc –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        return 0
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
main_check() {
    local overall_status=0
    
    echo -e "${BOLD}${GREEN}üîç –°–∏—Å—Ç–µ–º–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏${NC}"
    echo -e "${BOLD}–í—Ä–µ–º—è: $(date)${NC}"
    echo -e "${BOLD}–°–∏—Å—Ç–µ–º–∞: $(hostname)${NC}"
    
    # 1. –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏
    print_section "–ê–ö–¢–ò–í–ù–´–ï –°–ï–°–°–ò–ò"
    echo -e "  ${BOLD}–¢–µ–∫—É—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:${NC}"
    who | while read line; do
        echo -e "    $line"
    done
    
    echo -e "\n  ${BOLD}–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏–Ω—ã:${NC}"
    last -a | head -5 | while read line; do
        echo -e "    $line"
    done
    
    # 2. Cron –∑–∞–¥–∞–Ω–∏—è
    print_section "CRON –ó–ê–î–ê–ù–ò–Ø"
    echo -e "  ${BOLD}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ cron:${NC}"
    if crontab -l 2>/dev/null; then
        print_status "WARN" "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ cron –∑–∞–¥–∞–Ω–∏—è"
        overall_status=$((overall_status + 1))
    else
        print_status "OK" "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ cron –∑–∞–¥–∞–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    fi
    
    echo -e "\n  ${BOLD}–°–∏—Å—Ç–µ–º–Ω—ã–µ cron:${NC}"
    ls /etc/cron* -R 2>/dev/null | head -10
    
    echo -e "\n  ${BOLD}Systemd —Ç–∞–π–º–µ—Ä—ã:${NC}"
    systemctl list-timers --all --no-pager | head -10
    
    # 3. –°–ª—É—à–∞—é—â–∏–µ –ø–æ—Ä—Ç—ã
    print_section "–°–õ–£–®–ê–Æ–©–ò–ï –ü–û–†–¢–´"
    echo -e "  ${BOLD}–í—Å–µ —Å–ª—É—à–∞—é—â–∏–µ –ø–æ—Ä—Ç—ã:${NC}"
    ss -tulnp | head -15
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤
    if ! check_suspicious_ports; then
        overall_status=$((overall_status + 2))
    fi
    
    # 4. –ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    print_section "–ó–ê–ü–£–©–ï–ù–ù–´–ï –ü–†–û–¶–ï–°–°–´"
    echo -e "  ${BOLD}–¢–æ–ø –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –ø–∞–º—è—Ç–∏:${NC}"
    ps aux --sort=-%mem | head -10 | awk '{printf "  %-8s %-8s %-8s %-8s %s\n", $1, $2, $3, $4, $11}'
    
    # 5. –ù–µ–¥–∞–≤–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
    print_section "–ù–ï–î–ê–í–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø"
    if ! check_recent_changes; then
        overall_status=$((overall_status + 1))
    fi
    
    # 6. –ê–ø—Ç–∞–π–º –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
    print_section "–°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø"
    echo -e "  ${BOLD}–ê–ø—Ç–∞–π–º:${NC}"
    uptime
    
    echo -e "\n  ${BOLD}–ò—Å—Ç–æ—Ä–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–æ–∫:${NC}"
    last reboot | head -3
    
    # 7. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ sudo
    print_section "–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ò –ü–†–ê–í–ê"
    echo -e "  ${BOLD}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–æ–º–∞—à–Ω–∏–º–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º–∏:${NC}"
    getent passwd | grep '/home' | cut -d: -f1,6
    
    echo -e "\n  ${BOLD}–ì—Ä—É–ø–ø–∞ sudo:${NC}"
    getent group sudo | cut -d: -f4
    
    # 8. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    print_section "–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò"
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    echo -e "  ${BOLD}–ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã:${NC}"
    cat /proc/loadavg
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
    echo -e "\n  ${BOLD}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–æ–≤:${NC}"
    df -h | grep -E '^/dev/'
    if ! check_disk_usage; then
        overall_status=$((overall_status + 2))
    fi
    
    # –õ–æ–≥–∏ –æ—à–∏–±–æ–∫
    echo -e "\n  ${BOLD}–û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö (–ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—É—Ç–∫–∏):${NC}"
    journalctl --since "1 day ago" --priority=err --no-pager -q | tail -5
    
    # Failed systemd units
    echo -e "\n  ${BOLD}–ù–µ—É–¥–∞—á–Ω—ã–µ systemd units:${NC}"
    failed_units=$(systemctl --failed --no-pager -q)
    if [ -n "$failed_units" ]; then
        echo "$failed_units"
        print_status "WARN" "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—É–¥–∞—á–Ω—ã–µ systemd units"
        overall_status=$((overall_status + 1))
    else
        print_status "OK" "–í—Å–µ systemd units —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    fi
    
    # SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    echo -e "\n  ${BOLD}SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:${NC}"
    if [ -d ~/.ssh ]; then
        ls -la ~/.ssh/
    else
        print_status "WARN" "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ~/.ssh –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
    print_section "–ò–¢–û–ì–û–í–ê–Ø –°–í–û–î–ö–ê"
    
    if [ $overall_status -eq 0 ]; then
        print_status "OK" "–°–∏—Å—Ç–µ–º–∞ –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏"
        echo -e "  ${GREEN}–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ${NC}"
    elif [ $overall_status -le 3 ]; then
        print_status "WARN" "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"
        echo -e "  ${YELLOW}–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã${NC}"
    else
        print_status "CRIT" "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
        echo -e "  ${RED}–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ${NC}"
    fi
    
    echo -e "\n${BOLD}–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $(date)${NC}"
    echo -e "${BOLD}–°—Ç–∞—Ç—É—Å: $overall_status${NC}"
    
    return $overall_status
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
if [ ! -x "$0" ]; then
    chmod +x "$0"
fi

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
main_check
exit_code=$?

# –í—ã—Ö–æ–¥ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º
if [ $exit_code -eq 0 ]; then
    exit 0
elif [ $exit_code -le 3 ]; then
    exit 1
else
    exit 2
fi
